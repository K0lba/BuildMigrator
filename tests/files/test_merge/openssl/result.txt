cmake_minimum_required(VERSION 3.8)

project(openssl LANGUAGES C CXX VERSION 1.1.1)
if(NOT (CMAKE_SYSTEM_NAME STREQUAL "Darwin" OR CMAKE_SYSTEM_NAME STREQUAL "Linux" OR CMAKE_SYSTEM_NAME STREQUAL "Windows"))
    message(FATAL_ERROR "Current toolchain is not supported by this project [ ${CMAKE_SYSTEM_NAME} ${CMAKE_SYSTEM_PROCESSOR} ${CMAKE_SIZEOF_VOID_P} ${CMAKE_C_COMPILER_ID} ${CMAKE_CXX_COMPILER_ID} ]")
endif()
if(CMAKE_SYSTEM_NAME STREQUAL "Darwin" OR CMAKE_SYSTEM_NAME STREQUAL "Linux")
    enable_language(ASM)
endif()
if(CMAKE_SYSTEM_NAME STREQUAL "Windows")
    enable_language(ASM_NASM)
    enable_language(RC)
endif()

include(cmake_framework)
include(compiler_config)
include(system)
fix_asm_flags()
find_thread_library()

set(OPENSSL_SOURCE_DIR "${CMAKE_CURRENT_LIST_DIR}" CACHE PATH "")
if(CMAKE_SYSTEM_NAME STREQUAL "Darwin")
    set(OPENSSL_COMPILE_FLAGS
        -DAES_ASM
        -DBSAES_ASM
        -DECP_NISTZ256_ASM
        -DENGINESDIR="."
        -DGHASH_ASM
        -DKECCAK1600_ASM
        -DL_ENDIAN
        -DMD5_ASM
        -DOPENSSLDIR="/usr/local/ssl"
        -DOPENSSL_BN_ASM_GF2m
        -DOPENSSL_BN_ASM_MONT
        -DOPENSSL_BN_ASM_MONT5
        -DOPENSSL_CPUID_OBJ
        -DOPENSSL_IA32_SSE2
        -DOPENSSL_PIC
        -DPADLOCK_ASM
        -DPOLY1305_ASM
        -DRC4_ASM
        -DSHA1_ASM
        -DSHA256_ASM
        -DSHA512_ASM
        -DVPAES_ASM
        -DX25519_ASM
        -fPIC
        CACHE STRING ""
    )
endif()
if(CMAKE_SYSTEM_NAME STREQUAL "Windows")
    set(CMAKE_ASM_NASM_OBJECT_FORMAT win32)
    set(OPENSSL_COMPILE_FLAGS
        -DAES_ASM
        -DECP_NISTZ256_ASM
        -DENGINESDIR="."
        -DGHASH_ASM
        -DL_ENDIAN
        -DMD5_ASM
        "-DOPENSSLDIR=\"C:\\\\Program Files\\\\Common Files\\\\SSL\""
        -DOPENSSL_BN_ASM_GF2m
        -DOPENSSL_BN_ASM_MONT
        -DOPENSSL_BN_ASM_PART_WORDS
        -DOPENSSL_CPUID_OBJ
        -DOPENSSL_IA32_SSE2
        -DOPENSSL_PIC
        -DOPENSSL_SYS_WIN32
        -DOPENSSL_USE_APPLINK
        -DPADLOCK_ASM
        -DPOLY1305_ASM
        -DRC4_ASM
        -DRMD160_ASM
        -DSHA1_ASM
        -DSHA256_ASM
        -DSHA512_ASM
        -DVPAES_ASM
        -DWHIRLPOOL_ASM
        -DWIN32_LEAN_AND_MEAN
        -Gw
        -Zc:threadSafeInit-
        -arch:IA32
        /GL
        /bigobj
        CACHE STRING ""
    )
endif()
if(CMAKE_SYSTEM_NAME STREQUAL "Darwin" OR CMAKE_SYSTEM_NAME STREQUAL "Windows")
    set(OPENSSL_LINK_FLAGS "" CACHE STRING "")
endif()
if(CMAKE_SYSTEM_NAME STREQUAL "Linux")
    set(OPENSSL_COMPILE_FLAGS
        -DAES_ASM
        -DBSAES_ASM
        -DECP_NISTZ256_ASM
        -DENGINESDIR="."
        -DGHASH_ASM
        -DKECCAK1600_ASM
        -DL_ENDIAN
        -DMD5_ASM
        -DOPENSSLDIR="/usr/local/ssl"
        -DOPENSSL_BN_ASM_GF2m
        -DOPENSSL_BN_ASM_MONT
        -DOPENSSL_BN_ASM_MONT5
        -DOPENSSL_CPUID_OBJ
        -DOPENSSL_IA32_SSE2
        -DOPENSSL_PIC
        -DOPENSSL_USE_NODELETE
        -DPADLOCK_ASM
        -DPOLY1305_ASM
        -DRC4_ASM
        -DSHA1_ASM
        -DSHA256_ASM
        -DSHA512_ASM
        -DVPAES_ASM
        -DX25519_ASM
        -Wa,--noexecstack
        -fno-exceptions
        -fno-rtti
        CACHE STRING ""
    )
    set(OPENSSL_LINK_FLAGS
        "-Wl,-z,noexecstack -Wl,-z,relro -Wl,-z,now -static-libstdc++ -static-libgcc"
        CACHE STRING ""
    )
endif()
set(OPENSSL_INCLUDE_DIRS
    ${CMAKE_CURRENT_BINARY_DIR}
    ${CMAKE_CURRENT_BINARY_DIR}/apps
    ${CMAKE_CURRENT_BINARY_DIR}/crypto/include
    ${CMAKE_CURRENT_BINARY_DIR}/include
    ${OPENSSL_SOURCE_DIR}
    ${OPENSSL_SOURCE_DIR}/crypto/include
    ${OPENSSL_SOURCE_DIR}/include
    CACHE STRING ""
)

if(CMAKE_SYSTEM_NAME STREQUAL "Darwin")
    set(copy_prebuilt_artifacts_DIR darwin/prebuilt)
endif()
if(CMAKE_SYSTEM_NAME STREQUAL "Linux")
    set(copy_prebuilt_artifacts_DIR linux/prebuilt)
endif()
if(CMAKE_SYSTEM_NAME STREQUAL "Windows")
    set(copy_prebuilt_artifacts_DIR windows/prebuilt)
endif()
set(copy_prebuilt_artifacts_DEST ${CMAKE_CURRENT_BINARY_DIR})
file(GLOB_RECURSE _files RELATIVE ${CMAKE_CURRENT_LIST_DIR}/${copy_prebuilt_artifacts_DIR} ${copy_prebuilt_artifacts_DIR}/*)
foreach(_f ${_files})
    configure_file(${copy_prebuilt_artifacts_DIR}/${_f} ${copy_prebuilt_artifacts_DEST}/${_f} COPYONLY)
endforeach()

add_library(apps.static ${OPENSSL_SOURCE_DIR}/apps/app_rand.c)
if(CMAKE_SYSTEM_NAME STREQUAL "Darwin" OR CMAKE_SYSTEM_NAME STREQUAL "Windows")
    target_compile_options(apps.static PRIVATE ${OPENSSL_COMPILE_FLAGS})
endif()
if(CMAKE_SYSTEM_NAME STREQUAL "Linux")
    target_link_libraries(apps.static PRIVATE Threads::Threads)
    target_compile_options(apps.static PRIVATE ${OPENSSL_COMPILE_FLAGS} -fPIC)
endif()
target_include_directories(apps.static PRIVATE ${OPENSSL_INCLUDE_DIRS})
if(CMAKE_SYSTEM_NAME STREQUAL "Darwin" OR CMAKE_SYSTEM_NAME STREQUAL "Linux")
    set_target_properties(apps.static PROPERTIES OUTPUT_NAME apps)

    add_library(openssl_1_1
        ${OPENSSL_SOURCE_DIR}/initialize.cpp
        ${OPENSSL_SOURCE_DIR}/ssl.c
        ${CMAKE_CURRENT_BINARY_DIR}/crypto/aes/aes-x86_64.s
    )
endif()
if(CMAKE_SYSTEM_NAME STREQUAL "Windows")
    set_target_properties(apps.static PROPERTIES OUTPUT_NAME libapps)

    add_library(openssl_1_1
        ${CMAKE_CURRENT_BINARY_DIR}/libcrypto.def
        ${OPENSSL_SOURCE_DIR}/crypto/dllmain.c
        ${CMAKE_CURRENT_BINARY_DIR}/libcrypto.rc
        ${OPENSSL_SOURCE_DIR}/initialize.cpp
        ${OPENSSL_SOURCE_DIR}/ssl.c
        ${CMAKE_CURRENT_BINARY_DIR}/crypto/aes/aes-586.asm
    )
endif()
if(CMAKE_SYSTEM_NAME STREQUAL "Darwin" OR CMAKE_SYSTEM_NAME STREQUAL "Windows")
    set_target_properties(openssl_1_1 PROPERTIES LINK_FLAGS "${OPENSSL_LINK_FLAGS}")
endif()
if(CMAKE_SYSTEM_NAME STREQUAL "Windows")
    target_link_libraries(openssl_1_1 PRIVATE ws2_32 crypt32)
endif()
if(CMAKE_SYSTEM_NAME STREQUAL "Darwin" OR CMAKE_SYSTEM_NAME STREQUAL "Windows")
    target_compile_options(openssl_1_1 PRIVATE ${OPENSSL_COMPILE_FLAGS})
endif()
if(CMAKE_SYSTEM_NAME STREQUAL "Linux")
    set_target_properties(openssl_1_1 PROPERTIES LINK_FLAGS
        "${OPENSSL_LINK_FLAGS} -Wl,-znodelete -Wl,--version-script=${CMAKE_CURRENT_BINARY_DIR}/libcrypto.map"
    )
    target_link_libraries(openssl_1_1 PRIVATE ${CMAKE_DL_LIBS} Threads::Threads)
    target_compile_options(openssl_1_1 PRIVATE ${OPENSSL_COMPILE_FLAGS} -fPIC)
endif()
target_include_directories(openssl_1_1 PRIVATE ${OPENSSL_INCLUDE_DIRS})
if(CMAKE_SYSTEM_NAME STREQUAL "Darwin")
    set_target_properties(openssl_1_1 PROPERTIES VERSION 1.1)
    set_target_properties(openssl_1_1 PROPERTIES SOVERSION 1.1)
endif()

add_executable(openssl ${OPENSSL_SOURCE_DIR}/apps/asn1pars.c)
if(CMAKE_SYSTEM_NAME STREQUAL "Darwin" OR CMAKE_SYSTEM_NAME STREQUAL "Linux")
    set_target_properties(openssl PROPERTIES LINK_FLAGS "${OPENSSL_LINK_FLAGS}")
endif()
if(CMAKE_SYSTEM_NAME STREQUAL "Darwin")
    target_link_libraries(openssl PRIVATE apps.static openssl_1_1)
endif()
if(CMAKE_SYSTEM_NAME STREQUAL "Linux")
    target_link_libraries(openssl PRIVATE
        apps.static
        openssl_1_1
        ${CMAKE_DL_LIBS}
        Threads::Threads
    )
endif()
if(CMAKE_SYSTEM_NAME STREQUAL "Windows")
    set_target_properties(openssl PROPERTIES LINK_FLAGS "setargv.obj ${OPENSSL_LINK_FLAGS}")
    target_link_libraries(openssl PRIVATE apps.static openssl_1_1 ws2_32 crypt32)
endif()
target_compile_options(openssl PRIVATE ${OPENSSL_COMPILE_FLAGS})
target_include_directories(openssl PRIVATE ${OPENSSL_INCLUDE_DIRS})
if(CMAKE_SYSTEM_NAME STREQUAL "Darwin")
    set_target_properties(openssl PROPERTIES VERSION 1.1)
    set_target_properties(openssl PROPERTIES SOVERSION 1.1)
endif()
