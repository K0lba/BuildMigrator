# CMAKE_SYSTEM_NAME STREQUAL "Linux"
cmake_minimum_required(VERSION 3.8)

project(openssl LANGUAGES C CXX VERSION 1.1.1)
enable_language(ASM)

include(cmake_framework)
include(compiler_config)
include(system)
fix_asm_flags()
find_thread_library()

set(OPENSSL_SOURCE_DIR "${CMAKE_CURRENT_LIST_DIR}" CACHE PATH "")
set(OPENSSL_COMPILE_FLAGS
    -DAES_ASM
    -DBSAES_ASM
    -DECP_NISTZ256_ASM
    -DENGINESDIR="."
    -DGHASH_ASM
    -DKECCAK1600_ASM
    -DL_ENDIAN
    -DMD5_ASM
    -DOPENSSLDIR="/usr/local/ssl"
    -DOPENSSL_BN_ASM_GF2m
    -DOPENSSL_BN_ASM_MONT
    -DOPENSSL_BN_ASM_MONT5
    -DOPENSSL_CPUID_OBJ
    -DOPENSSL_IA32_SSE2
    -DOPENSSL_PIC
    -DOPENSSL_USE_NODELETE
    -DPADLOCK_ASM
    -DPOLY1305_ASM
    -DRC4_ASM
    -DSHA1_ASM
    -DSHA256_ASM
    -DSHA512_ASM
    -DVPAES_ASM
    -DX25519_ASM
    -Wa,--noexecstack
    -fno-exceptions
    -fno-rtti
    CACHE STRING ""
)
set(OPENSSL_LINK_FLAGS
    "-Wl,-z,noexecstack -Wl,-z,relro -Wl,-z,now -static-libstdc++ -static-libgcc"
    CACHE STRING ""
)
set(OPENSSL_INCLUDE_DIRS
    ${CMAKE_CURRENT_BINARY_DIR}
    ${CMAKE_CURRENT_BINARY_DIR}/apps
    ${CMAKE_CURRENT_BINARY_DIR}/crypto/include
    ${CMAKE_CURRENT_BINARY_DIR}/include
    ${OPENSSL_SOURCE_DIR}
    ${OPENSSL_SOURCE_DIR}/crypto/include
    ${OPENSSL_SOURCE_DIR}/include
    CACHE STRING ""
)

set(copy_prebuilt_artifacts_DIR linux/prebuilt)
set(copy_prebuilt_artifacts_DEST ${CMAKE_CURRENT_BINARY_DIR})
file(GLOB_RECURSE _files RELATIVE ${CMAKE_CURRENT_LIST_DIR}/${copy_prebuilt_artifacts_DIR} ${copy_prebuilt_artifacts_DIR}/*)
foreach(_f ${_files})
    configure_file(${copy_prebuilt_artifacts_DIR}/${_f} ${copy_prebuilt_artifacts_DEST}/${_f} COPYONLY)
endforeach()

add_library(apps.static ${OPENSSL_SOURCE_DIR}/apps/app_rand.c)
target_link_libraries(apps.static PRIVATE Threads::Threads)
target_compile_options(apps.static PRIVATE ${OPENSSL_COMPILE_FLAGS} -fPIC)
target_include_directories(apps.static PRIVATE ${OPENSSL_INCLUDE_DIRS})
set_target_properties(apps.static PROPERTIES OUTPUT_NAME apps)

add_library(openssl_1_1
    ${OPENSSL_SOURCE_DIR}/initialize.cpp
    ${OPENSSL_SOURCE_DIR}/ssl.c
    ${CMAKE_CURRENT_BINARY_DIR}/crypto/aes/aes-x86_64.s
)
set_target_properties(openssl_1_1 PROPERTIES LINK_FLAGS
    "${OPENSSL_LINK_FLAGS} -Wl,-znodelete -Wl,--version-script=${CMAKE_CURRENT_BINARY_DIR}/libcrypto.map"
)
target_link_libraries(openssl_1_1 PRIVATE ${CMAKE_DL_LIBS} Threads::Threads)
target_compile_options(openssl_1_1 PRIVATE ${OPENSSL_COMPILE_FLAGS} -fPIC)
target_include_directories(openssl_1_1 PRIVATE ${OPENSSL_INCLUDE_DIRS})

add_executable(openssl ${OPENSSL_SOURCE_DIR}/apps/asn1pars.c)
set_target_properties(openssl PROPERTIES LINK_FLAGS "${OPENSSL_LINK_FLAGS}")
target_link_libraries(openssl PRIVATE
    apps.static
    openssl_1_1
    ${CMAKE_DL_LIBS}
    Threads::Threads
)
target_compile_options(openssl PRIVATE ${OPENSSL_COMPILE_FLAGS})
target_include_directories(openssl PRIVATE ${OPENSSL_INCLUDE_DIRS})
