cmake_minimum_required(VERSION 3.13)

project(PROJECT C CXX)
enable_language(ASM_MASM)
enable_language(ASM_NASM)
enable_language(RC)

list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_LIST_DIR})
include(extensions)

set(SOURCE_DIR "${CMAKE_CURRENT_LIST_DIR}" CACHE PATH "")
set(CMAKE_ASM_YASM_OBJECT_FORMAT win32)
set(CMAKE_ASM_YASM_MACHINE x86)
set(CMAKE_ASM_NASM_OBJECT_FORMAT win32)

set(copy_prebuilt_artifacts_DIR prebuilt)
set(copy_prebuilt_artifacts_DEST ${CMAKE_CURRENT_BINARY_DIR})
file(GLOB_RECURSE _files RELATIVE ${CMAKE_CURRENT_LIST_DIR}/${copy_prebuilt_artifacts_DIR} ${copy_prebuilt_artifacts_DIR}/*)
foreach(_f ${_files})
    configure_file(${copy_prebuilt_artifacts_DIR}/${_f} ${copy_prebuilt_artifacts_DEST}/${_f} COPYONLY)
endforeach()

set_source_files_properties(${SOURCE_DIR}/nasm.asm PROPERTIES LANGUAGE ASM_NASM)
set_source_files_properties(${SOURCE_DIR}/a.cpp PROPERTIES COMPILE_OPTIONS
    "-Xclang -mllvm;-Xclang -instcombine-lower-dbg-declare=0;-fmsc-version=1911;-DWIN32=1;-DMODE_A;/utf-8"
)
set_source_files_properties(${SOURCE_DIR}/a.cpp PROPERTIES INCLUDE_DIRECTORIES "${CMAKE_CURRENT_BINARY_DIR};${CMAKE_CURRENT_BINARY_DIR}/a")
set_source_files_properties(${SOURCE_DIR}/b.c PROPERTIES COMPILE_OPTIONS
    "-msse4.2;-Xclang -mllvm;-Xclang -instcombine-lower-dbg-declare=0;-fmsc-version=1911;-DWIN32=1;-DMODE_B;/utf-8"
)
set_source_files_properties(${SOURCE_DIR}/b.c PROPERTIES INCLUDE_DIRECTORIES
    "${CMAKE_CURRENT_BINARY_DIR};${CMAKE_CURRENT_BINARY_DIR}/b_c"
)
set_source_files_properties(${SOURCE_DIR}/c.cpp PROPERTIES COMPILE_OPTIONS
    "-Xclang -mllvm;-Xclang -instcombine-lower-dbg-declare=0;-fmsc-version=1911;-DWIN32=1;-DMODE_C;/utf-8;/arch:AVX2"
)
set_source_files_properties(${SOURCE_DIR}/c.cpp PROPERTIES INCLUDE_DIRECTORIES
    "${CMAKE_CURRENT_BINARY_DIR};${CMAKE_CURRENT_BINARY_DIR}/b_c;${CMAKE_CURRENT_BINARY_DIR}/c"
)
set_source_files_properties(${SOURCE_DIR}/nasm.asm PROPERTIES COMPILE_OPTIONS "-DNASM;-DASM")
set_source_files_properties(${SOURCE_DIR}/nasm.asm PROPERTIES INCLUDE_DIRECTORIES ${CMAKE_CURRENT_BINARY_DIR}/xasm)
add_library(foo.static STATIC
    ${SOURCE_DIR}/a.cpp
    ${SOURCE_DIR}/b.c
    ${SOURCE_DIR}/c.cpp
    ${SOURCE_DIR}/nasm.asm
)
target_link_options(foo.static PRIVATE /llvmlibthin)
set_target_properties(foo.static PROPERTIES OUTPUT_NAME foo)

set_source_files_properties(${SOURCE_DIR}/masm.asm PROPERTIES LANGUAGE ASM_MASM)
set_source_files_properties(${SOURCE_DIR}/yasm.asm PROPERTIES COMPILE_OPTIONS "-DYASM;-DASM")
set_source_files_properties(${SOURCE_DIR}/yasm.asm PROPERTIES INCLUDE_DIRECTORIES ${CMAKE_CURRENT_BINARY_DIR}/xasm)
set_source_files_properties(${SOURCE_DIR}/masm.asm PROPERTIES COMPILE_OPTIONS "-DMASM;-DASM;/safeseh")
set_source_files_properties(${SOURCE_DIR}/masm.asm PROPERTIES INCLUDE_DIRECTORIES ${CMAKE_CURRENT_BINARY_DIR}/masm)
set_source_files_properties(${SOURCE_DIR}/d.cpp PROPERTIES COMPILE_OPTIONS
    "-msse4.2;-mpclmul;-Xclang -mllvm;-Xclang -instcombine-lower-dbg-declare=0;-fmsc-version=1911;-DWIN32=1;/utf-8;/GR-"
)
set_source_files_properties(${SOURCE_DIR}/d.cpp PROPERTIES INCLUDE_DIRECTORIES "${CMAKE_CURRENT_BINARY_DIR}")
set_source_files_properties(${SOURCE_DIR}/resource.rc PROPERTIES COMPILE_OPTIONS -DRC=1)
set_source_files_properties(${SOURCE_DIR}/resource.rc PROPERTIES INCLUDE_DIRECTORIES ${CMAKE_CURRENT_BINARY_DIR}/rc)
add_library(bar SHARED
    ${SOURCE_DIR}/masm.asm
    ${SOURCE_DIR}/d.cpp
    ${SOURCE_DIR}/resource.rc
)
target_link_options(bar PRIVATE /SAFESEH)
target_link_libraries(bar PRIVATE ws2_32 delayimp foo.static)
target_yasm_sources(bar PRIVATE ${SOURCE_DIR}/yasm.asm)
